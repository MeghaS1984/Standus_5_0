@model Standus_5_0.Areas.Report.Models.Dashboard    

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Report/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

<form asp-action="Edit" method="post" class="form-horizontal">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)

    <div class="form-horizontal col-xl-12">
        <h4>Dashboard</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group col-lg-12">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-xl-12" })
            <div class="col-xl-12">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control col-xl-12" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.query, htmlAttributes: new { @class = "control-label form-control-lg" })
            <div class="col-md-12">
                <textarea cols="300" class="form-control w-100" id="query" name="query" rows="10">@Model.query</textarea>
                @Html.ValidationMessageFor(model => model.query, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            var chartTypes = new List<SelectListItem>
        {
        new SelectListItem { Value = "", Text = "" },
        new SelectListItem { Value = "Bar", Text = "Bar" },
        new SelectListItem { Value = "Pie", Text = "Pie" },
        new SelectListItem { Value = "Doughnut", Text = "Doughnut" },
        new SelectListItem { Value = "Gantt", Text = "Gantt" }
        };
        }

        <div class="form-group">
            <label class="control-label">Chart Type</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.charttype, chartTypes, new { @class = "form-control form-control-lg" })
                @Html.ValidationMessageFor(model => model.charttype, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.xvalue, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.xvalue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.xvalue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.yovalue, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.yovalue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.yovalue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ytvalue, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ytvalue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ytvalue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.filterstring, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.filterstring, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.filterstring, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 mt-3">
                <button type="submit" class="btn btn-primary">Save</button>
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </div>
    </div>
</form>
