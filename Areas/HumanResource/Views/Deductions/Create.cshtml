@model Standus_5_0.Areas.HumanResource.Models.Deduction

@{
	ViewData["Title"] = "Create";
	Layout = "~/Areas/HumanResource/Views/Shared/_Layout.cshtml";
}

<div class="row">
	<div class="col-md-12">
		<div class="form-group">
			@Html.Raw(@TempData["Alert"])
		</div>
	</div>
</div>

<h5>Add New Deduction</h5>
<hr />

<div class="standard-row-container">
	<div class="row" style="width:30%">
		<div class="col-md-10">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="Name" class="control-label"></label>
				<input asp-for="Name" class="form-control" />
				<span asp-validation-for="Name" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Description" class="control-label"></label>
				<input asp-for="Description" class="form-control" />
				<span asp-validation-for="Description" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="PayRollSlNo" class="control-label"></label>
				<input asp-for="PayRollSlNo" class="form-control" />
				<span asp-validation-for="PayRollSlNo" class="text-danger"></span>
			</div>
			@{
				
			}
			<div class="form-group">
				<label asp-for="Type" class="control-label"></label>
				<select asp-for="Type" class="form-control" asp-items="@ViewBag.TypeList"></select>
				<span asp-validation-for="Type" class="text-danger"></span>
			</div>

			<div class="form-group">
				<label asp-for="RoundOff" class="control-label"></label>
					@{
						var round_off = new List<SelectListItem> {
							new SelectListItem {Text="" , Value ="" },
							new SelectListItem {Text = "Ceiling", Value = "Ceiling" } ,
							new SelectListItem {Text = "Up" , Value = "Up" },
							new SelectListItem {Text = "Down" , Value = "Down" }
							};

						ViewData["RoundOff"] = new SelectList(round_off, "Value", "Text");
					}
					<select asp-for="RoundOff" class="form-control" asp-items="@ViewBag.RoundOff"></select>
			</div>
			<br>
			<div class="form-group">
				<input type="button" value="Create" class="btn btn-primary" id="submit" /> |
				<a asp-action="Index">Back to List</a>
			</div>
		</div>
	</div>

	<div class="row" style="width:30%">
		<div class="col-md-12">
			
			<div class="form-group form-check">
				<label class="form-check-label">
					<input class="form-check-input" asp-for="OnYearlyIncome" /> @Html.DisplayNameFor(model => model.OnYearlyIncome)
				</label>
			</div>

			<div class="form-group form-check">
				<label class="form-check-label">
					<input class="form-check-input" asp-for="Fixed" /> @Html.DisplayNameFor(model => model.Fixed)
				</label>
			</div>
			<div class="form-group form-check">
				<label class="form-check-label">
					<input class="form-check-input" asp-for="InActive" /> @Html.DisplayNameFor(model => model.InActive)
				</label>
			</div>
		</div>
	</div>
	<div style="width:20%" class="row">
		<div class="col-md-12">
			<div id="StandardDeductionCalculation" style="width:100%">
			</div>
		</div>
	</div>
	<div style="width:20%" class="row">
		<div class="col-md-12">
			<div id="Schedule" style="width:100%">
			</div>
		</div>
	</div>
</div>



<script>
	$(document).ready(function () {
		$.ajax({
			url: '/humanresource/standarddeductioncalculations/index',
			type: 'GET',
			data: { deductionid: 0 },
			success: function (result) {
				$('#StandardDeductionCalculation').html(result);
			},
			error: function (xhr, status, error) {
				console.error("AJAX Error: " + error);
			}
		});

		$.ajax({
			url: '/humanresource/SlabDetails/SlabSchedule',
			type: 'GET',
			data: { deductionid: 0 },
			success: function (result) {
				$('#Schedule').html(result);
			},
			error: function (xhr, status, error) {
				console.error("AJAX Error: " + error);
			}
		});
	});

	$('#submit').on('click', function () {
		var formData = {
			name: $("#Name").val(),
			description: $("#Description").val(),
			payrollslno: $("#PayRollSlNo").val(),
			deduction_type: $("#Type").val(),
			roundoff: $("#RoundOff").val(),
			onyearlyincome: $("#OnYearlyIncome").prop('checked'),
			deduction_fixed: $("#Fixed").prop('checked'),
			inactive: $("#InActive").prop('checked'),
			allowances: [],
			months: []
		}

		$(".calculate_on").each(function () {
			let is_selected = $(this).find('input[name$=".selected"]').prop('checked');
			let allowanceid;
			if (is_selected) {
				allowanceid = $(this).find('input[name$=".allowanceid"]').val();
				formData.allowances.push(allowanceid);
			}
		});

		$(".month").each(function () {
			let is_selected = $(this).find('input[type="checkbox"]').prop('checked');
			let month;
			if (is_selected) {
				month = $(this).find('td').eq(0).text();
				formData.months.push(month);
			}
		})

		$.ajax({
			url: '@Url.Action("Create", "Deductions")',
			type: 'POST',
			data: JSON.stringify(formData),
			contentType: 'application/json',
			success: function (response) {
				// Handle success
				alert('Form submitted successfully!');
				console.log(response);  // Display or process the response here
			},
			error: function (xhr, status, error) {
				// Handle error
				alert('Error occurred while submitting the form!');
				console.log(xhr + "  " + error);
			}
		});
	})
</script>